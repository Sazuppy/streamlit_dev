import streamlit as st
import numpy as np
import pandas as pd
import pickle 
from catboost import CatBoostRegressor
from sklearn.preprocessing import StandardScaler, OneHotEncoder
import datetime

st.set_page_config(page_title="# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π", page_icon="üìà")

st.markdown('# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')

st.write(
    """–°–µ—Ä–≤–∏—Å –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å –ø—Ä–æ–±–µ–≥–æ–º ¬´–ù–µ –±–∏—Ç, –Ω–µ –∫—Ä–∞—à–µ–Ω¬ª —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤. –í –Ω—ë–º –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–æ —É–∑–Ω–∞—Ç—å —Ä—ã–Ω–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–≤–æ–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è. 
    –í –≤–∞—à–µ–º —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ: —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏ –∏ —Ü–µ–Ω—ã –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π. –í–∞–º –Ω—É–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–æ–¥–µ–ª—å –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏. 

–û–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:

- DateCrawled ‚Äî –¥–∞—Ç–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –∏–∑ –±–∞–∑—ã
- VehicleType ‚Äî —Ç–∏–ø –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ –∫—É–∑–æ–≤–∞
- RegistrationYear ‚Äî –≥–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
- Gearbox ‚Äî —Ç–∏–ø –∫–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á
- Power ‚Äî –º–æ—â–Ω–æ—Å—Ç—å (–ª. —Å.)
- Model ‚Äî –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è
- Kilometer ‚Äî –ø—Ä–æ–±–µ–≥ (–∫–º)
- RegistrationMonth ‚Äî –º–µ—Å—è—Ü —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
- FuelType ‚Äî —Ç–∏–ø —Ç–æ–ø–ª–∏–≤–∞
- Brand ‚Äî –º–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
- Repaired ‚Äî –±—ã–ª–∞ –º–∞—à–∏–Ω–∞ –≤ —Ä–µ–º–æ–Ω—Ç–µ –∏–ª–∏ –Ω–µ—Ç
- DateCreated ‚Äî –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
- NumberOfPictures ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—è
- PostalCode ‚Äî –ø–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∞–Ω–∫–µ—Ç—ã (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
- LastSeen ‚Äî –¥–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  

–¶–µ–ª–µ–≤–æ–π –ø—Ä–∏–∑–Ω–∞–∫:  
- Price ‚Äî —Ü–µ–Ω–∞ (–µ–≤—Ä–æ)
    """
)

st.sidebar.header("–ü—Ä–∏–∑–Ω–∞–∫–∏ –¥–ª—è –º–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è")

def changes(df):
    pass

def user_input_features():
    VehicleType = st.sidebar.selectbox('—Ç–∏–ø –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ –∫—É–∑–æ–≤–∞', ('suv', 'convertible', 'sedan', 'wagon', 'small', 'bus', 'coupe',
       'unknown', 'other'))
    RegistrationYear = st.sidebar.slider('–≥–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è', 1900, 2018, 2000)
    Gearbox = st.sidebar.selectbox('—Ç–∏–ø –∫–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á', ('manual', 'auto', 'unknown'))
    Power = st.sidebar.slider('–º–æ—â–Ω–æ—Å—Ç—å (–ª. —Å.)', 1, 1000, 300)
    Model = st.sidebar.selectbox('–º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è', ('tiguan', 'fortwo', '3er', 'unknown', 'logan', 'mondeo', 'golf',
       'astra', 'polo', 'omega', 'zafira', 'touran', 'other', 'c_klasse',
       'cooper', '2_reihe', 'rav', 'clio', '601', '500', 'laguna', 'a4',
       'civic', 'picanto', 'combo', 'boxster', 'stilo', 'ka', 'a3', 'eos',
       '7er', 'passat', 'tt', 'focus', 'fiesta', 'twingo', 'panda',
       'e_klasse', 'xc_reihe', 'carnival', 'kuga', 'a6', 'a_klasse',
       '5er', 'caddy', '6_reihe', 'cc', 'm_klasse', 'vectra', 'mx_reihe',
       'transit', 'insignia', 'corsa', 'discovery', 'bora', 'transporter',
       'touareg', 'lupo', 'leon', 'galant', 'v50', 'vito', '1_reihe',
       'colt', 'c5', 'cl', 'c4', 'v40', '3_reihe', 'sharan', 'slk',
       'galaxy', 'z_reihe', 'kangoo', 'c_max', 'clk', 'escort',
       'scirocco', 'avensis', 'ibiza', 'alhambra', 'octavia', 'megane',
       'pajero', '1er', 'auris', 'arosa', 'roadster', 'jimny', 's_klasse',
       'punto', 'ducato', 'agila', 'a1', 'x_reihe', 'meriva', 'i_reihe',
       'seicento', 'berlingo', 'captiva', 'ceed', 'q5', '156', 'beetle',
       'fabia', '147', 'citigo', '80', '900', 'phaeton', 'sandero',
       'kalos', 'roomster', 'rx_reihe', '5_reihe', 'cordoba', 'forfour',
       'qashqai', 'a8', 's_type', 'c3', 'micra', 'matiz', 'scenic',
       'clubman', 'antara', '4_reihe', 'superb', 'santa', 'primera',
       'b_klasse', 'tigra', 'yaris', 'modus', '159', 'carisma', 'cayenne',
       'cuore', 'viano', 'x_trail', 'espace', 'exeo', 'yeti', 'fox',
       'duster', 'spider', 'grand', 'mustang', 'c2', '100', 'vivaro',
       'niva', 'corolla', 'r19', 'sorento', 'terios', 'swift', 'fusion',
       'a5', 'x_type', 'cherokee', 'one', 'verso', 'rio', 'm_reihe',
       'cr_reihe', 'altea', 'juke', 'v_klasse', 'toledo', 'jazz', 'v70',
       'delta', 'outlander', 'signum', 'jetta', 'calibra', 's60', 'doblo',
       'impreza', 'forester', '911', 'sportage', 'lybra', '850',
       'sprinter', 'sl', 'c1', 'voyager', 'kadett', 'aveo', 'bravo',
       'justy', 'almera', 'freelander', 'ptcruiser', 'tucson', 'aygo',
       'kaefer', 'up', 's_max', 'getz', 'a2', 'cx_reihe', 'elefantino',
       '90', 'lancer', 'q7', 'defender', 'ypsilon', 'c_reihe', 'accord',
       'mii', 'nubira', 'glk', 'sirion', 'lanos', 'navara', '6er',
       'croma', '300c', 'range_rover', 'g_klasse', 'range_rover_sport',
       'note', 'spark', 'b_max', 'crossfire', 'move', 'kappa', '145',
       'legacy', 'charade', 'musa', 'kalina', 'lodgy', 'serie_2', 'q3',
       'samara', 'wrangler', 'materia', 'amarok', '9000', '200', 'i3',
       'v60', 'gl', 'rangerover'))
    Kilometer = st.sidebar.slider('–ø—Ä–æ–±–µ–≥ (–∫–º)', 1000, 150000, 30000)
    FuelType = st.sidebar.selectbox('—Ç–∏–ø —Ç–æ–ø–ª–∏–≤–∞', ('gasoline', 'petrol', 'unknown', 'electric', 'lpg', 'other', 'cng',
       'hybrid'))
    Brand = st.sidebar.selectbox('–º–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è', ('volkswagen', 'smart', 'bmw', 'dacia', 'ford', 'opel',
       'mitsubishi', 'mercedes_benz', 'renault', 'mini', 'peugeot',
       'toyota', 'citroen', 'trabant', 'fiat', 'audi', 'porsche', 'honda',
       'kia', 'mazda', 'volvo', 'suzuki', 'land_rover', 'seat', 'hyundai',
       'skoda', 'chevrolet', 'nissan', 'sonstige_autos', 'alfa_romeo',
       'saab', 'rover', 'daewoo', 'chrysler', 'jaguar', 'daihatsu',
       'lancia', 'jeep', 'lada', 'subaru'))
    Repaired = st.sidebar.selectbox('–±—ã–ª–∞ –º–∞—à–∏–Ω–∞ –≤ —Ä–µ–º–æ–Ω—Ç–µ –∏–ª–∏ –Ω–µ—Ç', ('no', 'unknown', 'yes'))
    
    data = {'VehicleType': VehicleType,
            'RegistrationYear': RegistrationYear,
            'Gearbox': Gearbox,
            'Power': Power,
            'Model': Model,
            'Kilometer': Kilometer,
            'FuelType': FuelType,
            'Brand': Brand,
            'Repaired': Repaired
            }
    features = pd.DataFrame(data, index=[0])
    return features

df = user_input_features()
df = df.sort_index(axis=1)

st.subheader('–¢–∞–±–ª–∏—Ü–∞ —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –≤–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:')
st.write(df)
   
def preprocessing_data(df, scaler, ohe):
    numeric = ['Power', 'Kilometer', 'RegistrationYear']
    categorial = ['FuelType', 'Repaired', 'Gearbox', 'VehicleType', 'Brand', 'Model']
    df[numeric] = scaler.transform(df[numeric])
    tmp = pd.DataFrame(ohe.transform(df[categorial]).toarray(), 
                                   columns=ohe.get_feature_names_out(),
                                   index=df.index)
    df.drop(categorial, axis=1, inplace=True)
    df = df.join(tmp).sort_index(axis=1)
    
            
    return pd.DataFrame(df, index=[0])
    
@st.cache_resource
def get_model():
    load_model = pickle.load(open('project_1/models/car_cost_pred.pkl', 'rb'))
    ohe_model = pickle.load(open('project_1/models/ohe_car_cost_pred.pkl', 'rb'))
    scaler_model = pickle.load(open('project_1/models/scaler_car_cost_pred.pkl', 'rb'))
    return load_model, scaler_model, ohe_model

model, sc_model, ohe_model = get_model()

df_new = preprocessing_data(df, sc_model, ohe_model)
# st.write(df_new)
prediction = model.predict(df_new)


st.subheader('–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å')
rounded_prediction = np.around(prediction)
st.write(str(abs(rounded_prediction.item())) + ' –µ–≤—Ä–æ')